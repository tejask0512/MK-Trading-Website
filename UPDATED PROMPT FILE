1. Fix app.py - Remove Duplicate SQLAlchemy Initialization

from config.database import db
from sqlalchemy.exc import SQLAlchemyError
# ...
db = SQLAlchemy()
db.init_app(app)
-------------------------------------
from sqlalchemy.exc import SQLAlchemyError
# Remove the import: from config.database import db
# Remove the duplicate: db = SQLAlchemy()
# Remove: db.init_app(app)

_____________________________________________________________________________________________________
2. Fix Database Initialization - Add Application Factory Pattern
Replace the entire app creation section (around line 50-90) with:

def create_app():
    app = Flask(__name__, template_folder="templates", static_folder="static")
    app.secret_key = os.getenv("SECRET_KEY", "dev-secret-key-change-in-production")
    
    # Database configuration
    app.config['SQLALCHEMY_DATABASE_URI'] = get_database_url()
    app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
    app.config['SQLALCHEMY_ENGINE_OPTIONS'] = {
        'pool_pre_ping': True,
        'pool_recycle': 300,
        'pool_timeout': 20,
        'connect_args': {'connect_timeout': 10, 'options': '-c timezone=UTC'}
    }
    
    # Initialize database ONLY ONCE
    db = SQLAlchemy(app)
    
    # Move all your models, routes, and functions INSIDE this function
    # ... (all your existing code)
    
    return app, db  # Return both app and db
_______________________________________________________________________________________________________________

3. Update the Bottom of app.py
Replace the bottom section:


# Remove: init_db() call at module level
# Remove: threading.Thread() at module level

# Add at the very end:
def create_application():
    app, db = create_app()
    
    # Initialize database
    with app.app_context():
        try:
            init_db()  # Call your init_db function here
        except Exception as e:
            logger.error(f"Database initialization failed: {e}")
    
    return app

# For gunicorn
application = create_application()

if __name__ == "__main__":
    app = create_application()
    app.run(debug=DEVELOPMENT_MODE, host="0.0.0.0", port=5000)
___________________________________________________________________________________________________________________

4. Fix Environment Variables in Docker Compose
Replace in docker-compose.yml:


# Remove this deprecated environment variable:
- FLASK_ENV=${FLASK_ENV:-production}

# Add this instead:
- FLASK_DEBUG=${FLASK_DEBUG:-false}
_________________________________________________________________________________________________________________
5. Update Dockerfile CMD
Replace the last line in Dockerfile:


# Change from:
CMD ["gunicorn", "--bind", "0.0.0.0:5000", "--workers", "2", "--timeout", "120", "--worker-class", "sync", "app:app"]

# To:
CMD ["gunicorn", "--bind", "0.0.0.0:5000", "--workers", "2", "--timeout", "120", "--worker-class", "sync", "app:application"]

_____________________________________________________________________________________________________________________________________
6. Add Missing Dependencies to requirements.txt
Add these lines to requirements.txt:


# Add at the end:
setuptools>=65.0.0
wheel>=0.37.0
