version: '3.8'

services:
  postgres:
    image: postgres:13-alpine
    container_name: mktrading_postgres
    environment:
      POSTGRES_DB: mktrading
      POSTGRES_USER: mktrading_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-mktrading_secure_password_2024}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mktrading_user -d mktrading"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - mktrading_network

  web:
    image: tejask0512/mktrading-website:latest
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: mktrading_web
    environment:
      - DATABASE_URL=postgresql://mktrading_user:${DB_PASSWORD:-mktrading_secure_password_2024}@postgres:5432/mktrading
      - DB_HOST=postgres
      - DB_USER=mktrading_user
      - DB_PASSWORD=${DB_PASSWORD:-mktrading_secure_password_2024}
      - SECRET_KEY=${SECRET_KEY:-your-super-secret-key-change-this}
      - DEVELOPMENT_MODE=${DEVELOPMENT_MODE:-false}
      - RAZORPAY_KEY_ID=${RAZORPAY_KEY_ID:-}
      - RAZORPAY_KEY_SECRET=${RAZORPAY_KEY_SECRET:-}
    ports:
      - "5000:5000"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - mktrading_network

volumes:
  postgres_data:

networks:
  mktrading_network:
    driver: bridge